name: Test and Deploy DNS No-AAAA

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: '3.11'
  DNS_PORT: 5353

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        run: pip install --no-cache-dir dnslib

      - name: Install system tools (if needed)
        run: |
          # Only install if not available
          command -v dig || sudo apt-get update -qq && sudo apt-get install -yq --no-upgrade dnsutils
          command -v nc || sudo apt-get install -yq --no-upgrade netcat-openbsd

      - name: Prepare environment
        run: |
          sudo systemctl stop systemd-resolved 2>/dev/null || true
          sudo pkill -f "dnsmasq\|systemd-resolved" 2>/dev/null || true

      - name: Start DNS server
        run: |
          python main.py --port ${{ env.DNS_PORT }} &
          echo "SERVER_PID=$!" >> $GITHUB_ENV
          
          # Wait for server to start
          for i in {1..15}; do
            if nc -z 127.0.0.1 ${{ env.DNS_PORT }} 2>/dev/null; then
              echo "✅ Server ready on port ${{ env.DNS_PORT }}"
              break
            fi
            [ $i -eq 15 ] && { echo "❌ Server failed to start"; exit 1; }
            sleep 0.5
          done

      - name: Test DNS queries
        run: |
          echo "🧪 Testing DNS functionality..."
          
          # Test A record
          A_RESULT=$(timeout 10 dig @127.0.0.1 -p ${{ env.DNS_PORT }} google.com A +short 2>/dev/null)
          if [ -n "$A_RESULT" ]; then
            echo "✅ A query: $A_RESULT"
          else
            echo "❌ A query failed"
            exit 1
          fi
          
          # Test AAAA record blocking
          AAAA_RESULT=$(timeout 10 dig @127.0.0.1 -p ${{ env.DNS_PORT }} google.com AAAA +short 2>/dev/null)
          if [ -z "$AAAA_RESULT" ]; then
            echo "✅ AAAA blocking works"
          else
            echo "❌ AAAA not blocked: $AAAA_RESULT"
            exit 1
          fi
          
          echo "🎉 All tests passed!"

      - name: Cleanup
        if: always()
        run: |
          [ -n "$SERVER_PID" ] && kill $SERVER_PID 2>/dev/null || true
          sudo systemctl start systemd-resolved 2>/dev/null || true

  build-and-push:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 12
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: kelvinzer0/dns-no-aaaa:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: kelvinzer0/dns-no-aaaa
          readme: ./README.md
