name: Test and Deploy DNS No-AAAA

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: '3.11'
  DNS_PORT: 5353

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dnslib
          sudo apt-get update -qq
          sudo apt-get install -yq dnsutils netcat-openbsd

      - name: Prepare test environment
        run: |
          # Stop conflicting services
          sudo systemctl stop systemd-resolved 2>/dev/null || true
          sudo pkill -f "dnsmasq\|systemd-resolved" 2>/dev/null || true
          sleep 1

      - name: Run DNS server test
        run: |
          # Start server in background
          python main.py --port ${{ env.DNS_PORT }} &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          
          # Wait for server to be ready
          for i in {1..10}; do
            if nc -z 127.0.0.1 ${{ env.DNS_PORT }}; then
              echo "✅ Server is ready"
              break
            fi
            sleep 1
          done

      - name: Test DNS functionality
        run: |
          # Test A record (should work)
          A_RESULT=$(dig @127.0.0.1 -p ${{ env.DNS_PORT }} google.com A +short +time=5)
          if [ -n "$A_RESULT" ]; then
            echo "✅ A query: $A_RESULT"
          else
            echo "❌ A query failed"
            exit 1
          fi
          
          # Test AAAA record (should be blocked)
          AAAA_RESULT=$(dig @127.0.0.1 -p ${{ env.DNS_PORT }} google.com AAAA +short +time=5)
          if [ -z "$AAAA_RESULT" ]; then
            echo "✅ AAAA blocking works"
          else
            echo "❌ AAAA blocking failed: $AAAA_RESULT"
            exit 1
          fi

      - name: Cleanup
        if: always()
        run: |
          kill $SERVER_PID 2>/dev/null || true
          sudo systemctl start systemd-resolved 2>/dev/null || true

  build-and-push:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: kelvinzer0/dns-no-aaaa
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
