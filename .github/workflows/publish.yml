name: Test and Deploy DNS No-AAAA

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install dnslib
          sudo apt-get update
          sudo apt-get install -y dnsutils netcat-openbsd  # Install dig and nc

      - name: Stop system services that might use port 53
        run: |
          sudo systemctl stop systemd-resolved 2>/dev/null || true
          sudo systemctl disable systemd-resolved 2>/dev/null || true
          sudo pkill -f "dnsmasq" 2>/dev/null || true
          sudo pkill -f "systemd-resolved" 2>/dev/null || true
          sleep 2

      - name: Run DNS server with timeout (using higher port)
        run: |
          # Use a higher port since 53 requires root privileges
          timeout 30s python main.py --port 5353 &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          sleep 5

      - name: Check server status
        run: |
          if ! ps -p $SERVER_PID > /dev/null; then
            echo "❌ Server process died"
            exit 1
          fi
          echo "✅ Server process is running"

      - name: Test DNS functionality
        run: |
          echo "Testing DNS on port 5353..."
          
          # Test A query (should work)
          if dig @127.0.0.1 -p 5353 google.com A +short; then
            echo "✅ A query working"
          else
            echo "❌ A query failed"
            exit 1
          fi
          
          # Test AAAA query (should be empty)
          result=$(dig @127.0.0.1 -p 5353 google.com AAAA +short)
          if [ -z "$result" ]; then
            echo "✅ AAAA blocking working"
          else
            echo "❌ AAAA blocking failed: $result"
            exit 1
          fi

      - name: Stop server
        run: |
          kill $SERVER_PID 2>/dev/null || true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: kelvinzer0/dns-no-aaaa:latest
